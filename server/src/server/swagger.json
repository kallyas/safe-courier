{
  "swagger": "2.0",
  "info": {
    "description": "Safe courier is a courier service that helps users deliver parcels to different destinations. safe courier provides courier quotes based on weight categories",
    "version": "1.0.0",
    "title": "Safe Courier API",
    "termsOfService": "https://github.com/kallyas/safe-courier/terms.md",
    "contact": {
      "email": "identumu@gmail.com",
      "name": "Tumuhirwe Iden",
      "url": "https://github.com/kallyas"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/kallyas/safe-courier/LICENSE"
    }
  },
  "host": "safe-courier-backend-api.herokuapp.com/api",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/users/{userId}/parcels": {
      "get": {
        "summary": "Find parcel orders by a userId",
        "description": "Returns all parcel delivery orders by a specific user",
        "operationId": "getParcelByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "No orders found by the given user"
          }
        },
        "security": [],
        "tags": [
          "user",
          "parcels"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/parcels/{parcelId}": {
      "get": {
        "summary": "Returns parcel by Id",
        "description": "Returns a parcel details for a given ID",
        "operationId": "getParcelById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "": {
            "description": "successful"
          }
        },
        "security": [],
        "tags": [
          "parcels"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "parcelId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/parcels": {
      "get": {
        "summary": "get all parcel orders",
        "description": "Get all parcel delivery orders",
        "operationId": "getParcels",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "404": {
            "description": "Parcels not found"
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer + Token",
            "required": true
          }
        ],
        "tags": [
          "parcels"
        ]
      },
      "parameters": []
    },
    "/parcels/{parcelId}/cancel": {
      "put": {
        "summary": "Cancel Parcel Order",
        "description": "This can only be done by the logged in user.",
        "operationId": "cancelParcelOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "status"
              ],
              "x-examples": {
                "example-1": {
                  "status": "cancelled"
                }
              }
            }
          },
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "parcels"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "parcelId",
          "in": "path",
          "description": "Parcel Id",
          "required": true
        }
      ]
    },
    "/auth/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "Logs In a user into the Application",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ]
            },
            "description": "request body"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/auth/signup/": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Create a new account",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          },
          "": {
            "description": ""
          }
        }
      },
      "parameters": []
    },
    "/parcels/{parcelId}/destination": {
      "parameters": [
        {
          "type": "string",
          "name": "parcelId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Change Location of a specific Order",
        "operationId": "put-parcels-parcelId-destination",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Only users who created order can change",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer + token",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "locationTo": {
                  "type": "string"
                },
                "": {
                  "type": "string"
                }
              }
            },
            "description": "update body",
            "x-examples": {
              "Update Destination": {
                "locationTo": "Jinja, Uganda"
              }
            }
          }
        ],
        "tags": [
          "parcels"
        ]
      }
    },
    "/parcels/{parcelId}/status": {
      "parameters": [
        {
          "type": "string",
          "name": "parcelId",
          "in": "path",
          "required": true,
          "description": "parcel Id"
        }
      ],
      "put": {
        "summary": "Change Order Status",
        "operationId": "put-parcels-parcelId-status",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Change status of a specific order. This can only be done by admin",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "status"
              ],
              "x-examples": {
                "example-1": {
                  "status": "delivered"
                }
              }
            },
            "description": ""
          },
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer + Token",
            "required": true
          }
        ],
        "tags": [
          "parcels"
        ]
      }
    },
    "/parcels/{parcelId}/presentLocation": {
      "parameters": [
        {
          "type": "string",
          "name": "parcelId",
          "in": "path",
          "required": true,
          "description": "parcelId"
        }
      ],
      "put": {
        "summary": "Change present Location of the parcel",
        "operationId": "put-parcels-parcelId-presentLocation",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This is only accessible by admin",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "locationTo": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "locationTo"
              ],
              "x-examples": {
                "example-1": {
                  "locationTo": "Gulu, Uganda"
                }
              }
            }
          },
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer + Token",
            "required": true
          }
        ],
        "tags": [
          "parcels"
        ]
      }
    }
  },
  "securityDefinitions": {},
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "title": ""
    },
    "User": {
      "type": "object",
      "xml": {
        "name": "User"
      },
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean",
          "format": "int32",
          "description": "User Status"
        }
      },
      "required": [
        "username",
        "firstName",
        "lastName",
        "email",
        "password"
      ]
    },
    "Parcel": {
      "description": "",
      "type": "object",
      "x-examples": {},
      "properties": {
        "recipient": {
          "$ref": "#/definitions/User"
        },
        "createdAt": {
          "type": "string",
          "minLength": 1
        },
        "status": {
          "type": "string",
          "minLength": 1
        },
        "price": {
          "type": "string",
          "minLength": 1
        },
        "_id": {
          "type": "string",
          "minLength": 1
        },
        "sender": {
          "type": "object",
          "required": [
            "isAdmin",
            "_id",
            "username",
            "firstName",
            "lastName"
          ],
          "properties": {
            "isAdmin": {
              "type": "boolean"
            },
            "_id": {
              "type": "string",
              "minLength": 1
            },
            "username": {
              "type": "string",
              "minLength": 1
            },
            "firstName": {
              "type": "string",
              "minLength": 1
            },
            "lastName": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "locationTo": {
          "type": "string",
          "minLength": 1
        },
        "city": {
          "type": "string",
          "minLength": 1
        },
        "parcelType": {
          "type": "string",
          "minLength": 1
        },
        "weight": {
          "type": "number"
        },
        "locationFrom": {
          "type": "string",
          "minLength": 1
        },
        "trackingCode": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "recipient",
        "createdAt",
        "status",
        "price",
        "_id",
        "sender",
        "locationTo",
        "city",
        "parcelType",
        "weight",
        "locationFrom",
        "trackingCode"
      ]
    }
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "safe-courier"
    }
  ]
}