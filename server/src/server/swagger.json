{
  "swagger": "2.0",
  "info": {
    "description": "Safe courier is a courier service that helps users deliver parcels to different destinations. safe courier provides courier quotes based on weight categories",
    "version": "1.0.0",
    "title": "Safe Courier API",
    "termsOfService": "https://github.com/kallyas/safe-courier/terms.md",
    "contact": {
      "email": "identumu@gmail.com",
      "name": "Tumuhirwe Iden",
      "url": "https://github.com/kallyas"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/kallyas/safe-courier/LICENSE"
    }
  },
  "host": "safe-courier-backend-api.herokuapp.com/api",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/users/{userId}/parcels": {
      "get": {
        "summary": "Find pet by ID",
        "description": "Returns all parcel delivery orders by a specific user",
        "operationId": "getParcelByUserId",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "No orders found by the given user"
          }
        },
        "security": [],
        "tags": [
          "user",
          "parcel"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "userId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/parcels/{parcelId}": {
      "get": {
        "summary": "Returns parcel by Id",
        "description": "Returns a parcel details for a given ID",
        "operationId": "getParcelById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "": {
            "description": "successful"
          }
        },
        "security": [],
        "tags": [
          "parcel"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "parcelId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/parcels": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Find purchase order by ID",
        "description": "Get all parcel delivery orders",
        "operationId": "getParcels",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "404": {
            "description": "Parcels not found"
          }
        }
      },
      "parameters": []
    },
    "/parcels/{parcelId}/cancel": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Cancel Parcel Order",
        "description": "This can only be done by the logged in user.",
        "operationId": "cancelParcelOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "parcelId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/auth/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "Logs In a user into the Application",
        "operationId": "loginUser",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "path",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ]
            },
            "description": "request body"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              },
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/auth/signup/": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Create a new account",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          },
          "": {
            "description": ""
          }
        }
      },
      "parameters": []
    }
  },
  "securityDefinitions": {},
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "xml": {
        "name": "User"
      },
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean",
          "format": "int32",
          "description": "User Status"
        }
      },
      "required": [
        "username",
        "firstName",
        "lastName",
        "email",
        "password"
      ]
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "safe-courier"
    }
  ]
}